package com.logan.weibo;

import java.io.IOException;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.animation.LinearInterpolator;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;

import com.logan.R;
import com.logan.util.Status;
import com.logan.weibo.adapter.SearchAdapter;
import com.weibo.net.WeiboException;

/*
 * 对应于“提到我的”
 * 
 * 现在改成了“查看用户自己的微博”
 */
public class UserTimeLine extends BottomBaseActivity {

	private final String TAG = "UserTimeLine";


	SearchAdapter listAdapter;
	JSONObject jsonObj = null;
	String url;
	String httpMethod;
	JSONArray jArray = null;
	String jsonData;

	// private int add = 0;
	// private int num = 20;

	
	private ListView lv = null;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		setSelectedFooterTab(1);
		
		lv=(ListView) findViewById(R.id.userinfo_listview);
		lv.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					final int position, long id) {

				Handler handler = new Handler();

				Log.v(TAG, "onListItemClicked!");
				Runnable mTasks = new Runnable() {
					@Override
					public void run() {
						Intent intent = new Intent();
						intent.putExtra("position", position + "");
						intent.putExtra("jsonData", jsonData);

						intent.setClass(getApplicationContext(), StatusDetail.class);
						startActivity(intent);

					}
				};
				handler.post(mTasks);
			}
		});
		titleTV.setText("我的微博");

		refreshBtn.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				// 显示刷新按钮动画
				Animation hyperspaceJump = AnimationUtils.loadAnimation(
						UserTimeLine.this, R.anim.refresh_bt);
				LinearInterpolator lir = new LinearInterpolator();
				hyperspaceJump.setInterpolator(lir);
				refreshBtn.startAnimation(hyperspaceJump);

				Runnable r = new Runnable() {
					@Override
					public void run() {
						while (!Thread.currentThread().isInterrupted()) {
							try {
								Thread.sleep(1000);
								refreshBtn.clearAnimation();
							} catch (InterruptedException e) {
								Thread.currentThread().interrupt();
							}
						}
					}
				};

				Thread td = new Thread(r);
				td.start();
				SearchAdapter sa = getWeiBoData();
				sa.notifyDataSetInvalidated();
				sa.notifyDataSetChanged();
				lv.setAdapter(sa);
				final ProgressDialog myDialog = ProgressDialog.show(
						UserTimeLine.this, "稍等", "加载中。。。", true, true);
				new Thread() {
					@Override
					public void run() {
						try {
							// 休眠10秒钟
							sleep(500);
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
						myDialog.dismiss();
					}
				}.start();
			}
		});

		statushow();
	}

	private void statushow() {
		// 为了避免程序获取数据时，由于网络原因或者数据量很大而导致程序无响应（ANR），因而使用了异步处理
		Handler handler = new Handler();
		Runnable mTasks = new Runnable() {
			@Override
			public void run() {

				// 去掉两个listview元素之间的分割线
				lv.setDivider(null);
				lv.setAdapter(getWeiBoData());
			}
		};
		Thread th = new Thread();
		th.start();

		handler.post(mTasks);
		/*
		 * 弹出提示框，它主要为了是界面更加友好，实际上它和数据加载没有关系，只是同用户进行交互
		 */
		final ProgressDialog myDialog = ProgressDialog.show(UserTimeLine.this,
				"稍等", "亲，正在努力加载数据。。。", true, true);

		new Thread() {
			@Override
			public void run() {
				try {
					// 休眠10秒钟
					sleep(500);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				myDialog.dismiss();
			}
		}.start();
	}

	
	/*
	 * 获取授权用户的微博信息列表，包括：头像、新动态的标题、内容、评论等等
	 */
	private SearchAdapter getWeiBoData() {

		try {
			jsonData = getUserTimeline();

		} catch (MalformedURLException e1) {
			e1.printStackTrace();
		} catch (IOException e1) {
			e1.printStackTrace();
		} catch (WeiboException e1) {
			e1.printStackTrace();
		}

		List<Status> status = null;
		JSONObject jsonStatus = null;
		try {
			jsonStatus = new JSONObject(jsonData);
		} catch (JSONException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		JSONArray statuses = null;
		if (!jsonStatus.isNull("statuses")) {
			try {
				statuses = jsonStatus.getJSONArray("statuses");
				// if (!jsonStatus.isNull("reposts")) {
				// statuses = jsonStatus.getJSONArray("reposts");
				// }
				if (!jsonStatus.isNull("reposts")) {
					statuses = jsonStatus.getJSONArray("reposts");
				}
				int size = statuses.length();
				status = new ArrayList<Status>(size);
				for (int i = 0; i < size; i++) {
					status.add(new Status(statuses.getJSONObject(i)));
				}
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (WeiboException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		Log.v(TAG, "List<? extends Map<String, ?>>staus----------" + status);
		listAdapter = new SearchAdapter(this,
				(List<? extends Map<String, ?>>) status, 0, null, null);

		return listAdapter;


	}

//	@Override
//	protected void onListItemClick(ListView l, View v, final int position,
//			final long id) {
//		// TODO Auto-generated method stub
//		super.onListItemClick(l, v, position, id);
//		// 此方法负责对listView中点击的一条子项的监听和处理
//		Handler handler = new Handler();
//		Runnable mTasks = new Runnable() {
//			@Override
//			public void run() {
//				Intent intent = new Intent();
//				// 选中的哪一条微博的位置，它的功能用微博的ID号来代替
//				intent.putExtra("position", position + "");
//				// 传递微博数据
//				intent.putExtra("jsonData", jsonData);
//
//				intent.setClass(UserTimeLine.this, StatusDetail.class);
//				startActivity(intent);
//			}
//		};
		/*
		 * ProgressDialog.show(WeiBoListActivity.this, "正在连接服务器..", "连接中,请稍后..",
		 * true, true);
		 */
//		handler.post(mTasks);
//	}

	@Override
	public int getLayout() {
		// TODO Auto-generated method stub
		return R.layout.weibo_usertimeline;
	}


}
