package com.logan.weibo.adapter;

import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.logan.R;
import com.logan.util.QAsyncImageLoader;
import com.logan.util.QAsyncImageLoader.ImageCallback;
import com.logan.util.TimeUtil;
import com.logan.weibo.bean.QStatus;
import com.logan.weibo.bean.Status;

/**
 * QFriendTimeLine的适配器
 * 
 * @author Logan
 * 
 */
public class QListViewAdapter extends BaseAdapter {
	private final String TAG = "QListViewAdapter";

	private QAsyncImageLoader imageLoader = new QAsyncImageLoader();
	private LayoutInflater mInflater;

	private List<QStatus> list;

	ViewHolder holder;

	public QListViewAdapter(Context context, List<QStatus> list) {
		super();
		this.list = list;
		this.mInflater = LayoutInflater.from(context);
	}

	@Override
	public int getCount() {
		
		return this.list != null ? this.list.size() : 0;
	}

	@Override
	public Object getItem(int position) {
		
		return list.get(position);
	}

	@Override
	public long getItemId(int position) {
		
		return position;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		QStatus mQstatus = list.get(position);
		if (convertView == null) {
			holder = new ViewHolder();
			convertView = mInflater.inflate(R.layout.weibo_listview_item, null);
			holder.nick = (TextView) convertView.findViewById(R.id.item_screen_name);
			holder.head = (ImageView) convertView.findViewById(R.id.item_profile_image);

			holder.origText = (TextView) convertView.findViewById(R.id.item_text);
			holder.image = (ImageView) convertView.findViewById(R.id.item_microBlogImage);
			holder.from = (TextView) convertView.findViewById(R.id.item_from);

			holder.mcount = (TextView) convertView.findViewById(R.id.item_tweet_statuses_count);
			holder.count = (TextView) convertView.findViewById(R.id.item_tweet_followers_count);
			holder.timeStamp = (TextView) convertView.findViewById(R.id.item_created_at);
			holder.isVip = (ImageView) convertView.findViewById(R.id.item_vipImage);

			// ---------------转发微博---------------------
			holder.source_text = (TextView) convertView.findViewById(R.id.item_retweeted_status_text);
			holder.source_image = (ImageView) convertView.findViewById(R.id.item_retweeted_status_microBlogImage);
			holder.source_ll = convertView.findViewById(R.id.item_retweeted_status_ll);

			convertView.setTag(holder);
		} else {
			holder = (ViewHolder) convertView.getTag();
		}

		holder.nick.setText(mQstatus.getNick());
		// if (!origText.equals("") && origText != null)
		holder.origText.setText(mQstatus.getOrigText());
		// else
		// holder.origText.setText(text);
		if (!mQstatus.getImage().equals("")) {
			holder.image.setVisibility(View.VISIBLE);
			setViewImage(holder.image, mQstatus.getImage());
		} else {
			holder.image.setVisibility(View.GONE);
		}
		holder.from.setText(mQstatus.getFrom());

		Drawable cachedImage = null;
		if (!mQstatus.getHead().equals("") && mQstatus.getHead() != null) {
			cachedImage = imageLoader.loadDrawable(mQstatus.getHead(), holder.head,
					new ImageCallback() {
						@Override
						public void imageLoaded(Drawable imageDrawable,
								ImageView imageView, String imageUrl) {
							imageView.setImageDrawable(imageDrawable);
						}
					});
		}
		if (cachedImage == null) {
			holder.head.setImageResource(R.drawable.icon);
		} else {
			holder.head.setImageDrawable(cachedImage);
		}

		holder.mcount.setText(mQstatus.getMcount());
		holder.count.setText(mQstatus.getCount());
		holder.timeStamp.setVisibility(View.VISIBLE);
		if (!mQstatus.getCreated_at().equals(""))
			holder.timeStamp.setText(mQstatus.getCreated_at());
		else
			holder.timeStamp.setVisibility(View.INVISIBLE);
		if (mQstatus.getIsVip() == 1)
			holder.isVip.setVisibility(View.VISIBLE);
		else
			holder.isVip.setVisibility(View.INVISIBLE);

		// ------------------------转发微博----------------------------------

		if (!mQstatus.getSource_image().equals("") && mQstatus.getSource_image() != null) {
			holder.source_image.setVisibility(View.VISIBLE);
			setViewImage(holder.source_image, mQstatus.getSource_image());
		} else
			holder.source_image.setVisibility(View.GONE);
		if (!mQstatus.getSource_text().equals("")) {
			holder.source_text.setVisibility(View.VISIBLE);
			holder.source_text.setText(mQstatus.getSource_text());
		} else
			holder.source_text.setVisibility(View.GONE);

		if (!mQstatus.getIsVisible())
			holder.source_ll.setVisibility(View.GONE);
		else
			holder.source_ll.setVisibility(View.VISIBLE);

		return convertView;
	}

	public void setViewImage(final ImageView v, String url) {
		// Bitmap bitmap = WebImageBuilder.returnBitMap(url);
		// v.setImageBitmap(bitmap);
		imageLoader.loadDrawable(url, v, new ImageCallback() {
			@Override
			public void imageLoaded(Drawable imageDrawable, ImageView imageView, String imageUrl) {
				v.setImageDrawable(imageDrawable);
			}
		});
	}

	static class ViewHolder {
		ImageView head;// 头像
		TextView nick;// 用户名
		TextView origText;// 微博文本
		ImageView image;// 微博图片
		TextView from;// 平台来源
		ImageView isVip;
		TextView mcount;
		TextView count;
		TextView timeStamp;
		// --------转发微博-----------------
		TextView source_text;// 转发微博文字
		ImageView source_image;// 转发微博图片
		View source_ll;// 转发微博父容器
	}
}
