package com.logan.weibo;

import java.io.IOException;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.animation.LinearInterpolator;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import android.widget.TextView;

import com.logan.R;
import com.logan.util.Status;
import com.logan.weibo.adapter.SearchAdapter;
import com.weibo.net.WeiboException;
/**
 * 微博主页
 * @author Logan
 *
 */
public class FriendTimeLine extends BottomBaseActivity {
	private final String TAG = "FriendTimeLine";

	private SearchAdapter listAdapter;
	private String jsonData;
	private ListView lv = null;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setSelectedFooterTab(0);
		titleTV = (TextView) findViewById(R.id.weibo_title_TV);
		titleTV.setText("微博主页");
		lv = (ListView) findViewById(R.id.listView);
		lv.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					final int position, long id) {

				Handler handler = new Handler();
				Log.v(TAG, "onListItemClicked!");
				Runnable mTasks = new Runnable() {
					@Override
					public void run() {
						Intent intent = new Intent();
						intent.putExtra("position", position + "");
						intent.putExtra("jsonData", jsonData);

						intent.setClass(FriendTimeLine.this, StatusDetail.class);
						startActivity(intent);

					}
				};
				handler.post(mTasks);
			}
		});

		refreshBtn.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				Animation hyperspaceJump = AnimationUtils.loadAnimation(
						FriendTimeLine.this, R.anim.refresh_bt);
				LinearInterpolator lir = new LinearInterpolator();
				hyperspaceJump.setInterpolator(lir);
				refreshBtn.startAnimation(hyperspaceJump);
				Runnable r = new Runnable() {
					@Override
					public void run() {
						while (!Thread.currentThread().isInterrupted()) {
							try {
								Thread.sleep(1000);
								refreshBtn.clearAnimation();
							} catch (InterruptedException e) {
								Thread.currentThread().interrupt();
							}
						}
					}
				};
				Thread td = new Thread(r);
				td.start();
				SearchAdapter sa = getWeiBoData();
				lv.setAdapter(sa);
				sa.notifyDataSetInvalidated();
				sa.notifyDataSetChanged();
				final ProgressDialog myDialog = ProgressDialog.show(FriendTimeLine.this,
						"稍等", "数据加载中", true, true);
				new Thread() {
					@Override
					public void run() {
						try {
							sleep(500);
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
						myDialog.dismiss();
					}
				}.start();
			}
		});

		statushow();


	}

	

	private void statushow() {
		Handler handler = new Handler();
		Runnable mTasks = new Runnable() {

			@Override
			public void run() {

			}
		};
		Thread t = new Thread(mTasks);
		t.start();

		lv.setDivider(null);
		SearchAdapter sa = getWeiBoData();
		lv.setAdapter(sa);

		final ProgressDialog myDialog = ProgressDialog.show(FriendTimeLine.this, "稍等",
				"数据加载中", true, true);
		handler.post(mTasks);

		new Thread() {
			@Override
			public void run() {
				try {
					sleep(500);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				myDialog.dismiss();
			}
		}.start();
	}


	

	@SuppressWarnings("unchecked")
	private SearchAdapter getWeiBoData() {
		try {
			jsonData = getFriendTimeline();

		} catch (MalformedURLException e1) {
			e1.printStackTrace();
		} catch (IOException e1) {
			e1.printStackTrace();
		} catch (WeiboException e1) {
			e1.printStackTrace();
		}

		List<Status> status = null;
		JSONObject jsonStatus = null;
		try {
			jsonStatus = new JSONObject(jsonData);
		} catch (JSONException e1) {
			
			e1.printStackTrace();
		}
		JSONArray statuses = null;
		if (!jsonStatus.isNull("statuses")) {
			try {
				statuses = jsonStatus.getJSONArray("statuses");
				// if (!jsonStatus.isNull("reposts")) {
				// statuses = jsonStatus.getJSONArray("reposts");
				// }
				if (!jsonStatus.isNull("reposts")) {
					statuses = jsonStatus.getJSONArray("reposts");
				}
				int size = statuses.length();
				status = new ArrayList<Status>(size);
				for (int i = 0; i < size; i++) {
					status.add(new Status(statuses.getJSONObject(i)));
				}
			} catch (JSONException e) {
				
				e.printStackTrace();
			} catch (WeiboException e) {
				
				e.printStackTrace();
			}
		}
		Log.v(TAG, "List<? extends Map<String, ?>>staus----------" + status);
		listAdapter = new SearchAdapter(this,
				(List<? extends Map<String, ?>>) status, 0, null, null);

		return listAdapter;

	}


	@Override
	public int getLayout() {
		return R.layout.weibo_friendtimeline;
	}



}
