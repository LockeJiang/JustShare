package com.logan.weibo.adapter;

import java.util.List;
import java.util.Map;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.text.format.DateUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.logan.R;
import com.logan.util.AsyncImageLoader;
import com.logan.util.Source;
import com.logan.util.Status;
import com.logan.util.User;

public class SearchAdapter extends BaseAdapter {

	private final String TAG = "SearchAdapter";

	private AsyncImageLoader imageLoader = new AsyncImageLoader();
	private List<? extends Map<String, ?>> mData;
	private LayoutInflater mInflater;

	public SearchAdapter(Context context,
			List<? extends Map<String, ?>> status, int resource, String[] from,
			int[] to) {
		// super(context, status, resource, from, to);
		super();
		Log.v(TAG, "Constructing--------------------SearchAdapter");
		mData = status;
		// mResource = resource;
		// mFrom = from;
		// mTo = to;
		mInflater = (LayoutInflater) context
				.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
	}

	ViewHolder holder;

	public void setViewImage(final ImageView v, String url) {
		Log.v(TAG,
				"------------------setViewImage(final ImageView v, String url)--------------------");
		Drawable cachedImage = imageLoader.loadDrawable(url,
				new AsyncImageLoader.ImageCallback() {
					@Override
					public void imageLoaded(Drawable imageDrawable,
							String imageUrl) {
						v.setImageDrawable(imageDrawable);
						if (imageDrawable != null
								&& imageDrawable.getIntrinsicWidth() > 0) {
							v.setImageDrawable(imageDrawable);
						}
					}
				});
		v.setImageDrawable(cachedImage);
	}

	public void setViewImage(ImageView v, int value) {
		Log.v(TAG,
				"------------------setViewImage(ImageView v, int value)--------------------");
		v.setImageResource(value);
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		Status mStatus = (Status) mData.get(position);
		Log.v(TAG, "mStatus----------------" + mStatus.isEmpty());
		User user = mStatus.getUser();
		Status retweetedStatus = null;
		if (mStatus.getRetweetedStatus() != null) {
			retweetedStatus = mStatus.getRetweetedStatus();
		}
		String profile_image_url = user.getProfileImageUrl();
		Log.v(TAG, "profile_image_url:  " + profile_image_url);
		String name = user.getName();
		Log.v(TAG, "name:  " + name);
		String text = mStatus.getText();
		Log.v(TAG, "text:  " + text);
		String microBlogImage = mStatus.getThumbnailPic();
		Log.v(TAG, "microBlogImage:  " + microBlogImage);
		Source source = mStatus.getSource();
		Log.v(TAG, "source:  " + source);
		Boolean verified = user.isVerified();
		Log.v(TAG, "verified:  " + verified);
		int statuses_count = mStatus.getCommentsCount();
		Log.v(TAG, "statuses_count:  " + statuses_count);
		int followers_count = mStatus.getRepostsCount();
		Log.v(TAG, "followers_count:  " + followers_count);
		String created_at = "";
		String created_at_temp = mStatus.getCreatedAt();
		if (!created_at_temp.equals("")) {
			created_at = DateUtils.getRelativeTimeSpanString(
					java.util.Date.parse(created_at_temp),
					System.currentTimeMillis(), DateUtils.MINUTE_IN_MILLIS)
					.toString();
			Log.v(TAG, "created_at:  " + created_at);
		}
		if (convertView == null) {
			holder = new ViewHolder();
			convertView = mInflater.inflate(R.layout.weibo_listview_item, null);
			holder.name = (TextView) convertView
					.findViewById(R.id.item_screen_name);
			holder.profile_image = (ImageView) convertView
					.findViewById(R.id.item_profile_image);

			holder.text = (TextView) convertView
					.findViewById(R.id.item_text);
			holder.microBlogImage = (ImageView) convertView
					.findViewById(R.id.item_microBlogImage);
			holder.source = (TextView) convertView
					.findViewById(R.id.item_from);

			holder.statuses_count = (TextView) convertView
					.findViewById(R.id.item_tweet_statuses_count);
			holder.followers_count = (TextView) convertView
					.findViewById(R.id.item_tweet_followers_count);
			holder.created_at = (TextView) convertView
					.findViewById(R.id.item_created_at);
			holder.verified = (ImageView) convertView
					.findViewById(R.id.item_vipImage);

			// holder.screen_name = (TextView) convertView
			// .findViewById(R.id.weibo_list_item_screen_name);

			holder.retweeted_status_text = (TextView) convertView
					.findViewById(R.id.item_retweeted_status_text);
			holder.retweeted_status_microBlogImage = (ImageView) convertView
					.findViewById(R.id.item_retweeted_status_microBlogImage);
			holder.retweeted_status_ll = (LinearLayout) convertView
					.findViewById(R.id.item_retweeted_status_ll);

			convertView.setTag(holder);
		} else {
			holder = (ViewHolder) convertView.getTag();
		}

		holder.name.setText(name);
		holder.text.setText(text);
		// microBlogImage = mStatus.getThumbnailPic();
		if (!microBlogImage.equals("")) {
			holder.microBlogImage.setVisibility(View.VISIBLE);
			setViewImage(holder.microBlogImage, microBlogImage);
		} else {
			holder.microBlogImage.setVisibility(View.GONE);
		}
		holder.source.setText(source.toString());
		if (!profile_image_url.equals(""))
			setViewImage(holder.profile_image, profile_image_url);
		// else setViewImage(v, value)
		holder.statuses_count.setText(statuses_count + "");
		holder.followers_count.setText(followers_count + "");
		holder.created_at.setVisibility(View.VISIBLE);
		if (!created_at.equals(""))
			holder.created_at.setText(created_at);
		else
			holder.created_at.setVisibility(View.INVISIBLE);
		if (verified)
			holder.verified.setVisibility(View.VISIBLE);
		else
			holder.verified.setVisibility(View.INVISIBLE);

		// ------------------------转发微博----------------------------------

		// String screen_name = null;
		// String retweeted_status_text = null;
		// String retweeted_status_microBlogImage = null;
		String retweeted_status_text = "";
		if (retweetedStatus != null) {
			retweeted_status_text = retweetedStatus.getText();
			Log.v(TAG, "retweeted_status_text:  " + retweeted_status_text);
		} else {
			// do nothing
		}

		if (!retweeted_status_text.equals("")) {
			holder.retweeted_status_text.setVisibility(View.VISIBLE);
			holder.retweeted_status_text.setText(retweeted_status_text);
		} else {
			holder.retweeted_status_text.setVisibility(View.GONE);
		}
		String retweeted_status_microBlogImage = "";
		if (retweetedStatus != null) {

			retweeted_status_microBlogImage = retweetedStatus.getThumbnailPic();
			Log.v(TAG, "retweeted_status_microBlogImage:  "
					+ retweeted_status_microBlogImage);
		} else {
			// do nothing
		}
		if (!retweeted_status_microBlogImage.equals("")) {
			holder.retweeted_status_microBlogImage.setVisibility(View.VISIBLE);
			setViewImage(holder.retweeted_status_microBlogImage,
					retweeted_status_microBlogImage);
		} else {
			holder.retweeted_status_microBlogImage.setVisibility(View.GONE);
		}
		if (retweeted_status_text.equals("")
				&& retweeted_status_microBlogImage.equals(""))
			holder.retweeted_status_ll.setVisibility(View.GONE);
		else
			holder.retweeted_status_ll.setVisibility(View.VISIBLE);

		return convertView;
	}

	static class ViewHolder {
		ImageView profile_image;
		TextView name;
		TextView text;
		ImageView microBlogImage;
		TextView source;
		ImageView verified;
		TextView statuses_count;
		TextView followers_count;
		TextView created_at;
		// TextView screen_name;
		TextView retweeted_status_text;
		ImageView retweeted_status_microBlogImage;
		LinearLayout retweeted_status_ll;
	}

	@Override
	public int getCount() {
		return this.mData != null ? this.mData.size() : 0;
	}

	@Override
	public Object getItem(int position) {
		return this.mData.get(position);
	}

	@Override
	public long getItemId(int position) {
		return position;
	}

}
